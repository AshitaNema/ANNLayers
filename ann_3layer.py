# -*- coding: utf-8 -*-
"""ANN_3Layer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wdeZo0w9gnoUMk0wxKuaAcSK_4XaRj1Y
"""

# Basic ANN for Three Layers
import numpy as np

input_vector = np.array([2, 1.50])
weights_1 = np.array([-2.45, -3.07])
bias = np.array([0.3])
print(input_vector)
print(bias)

def sigmoid(x):
    return 1 / (1 + np.exp(-x))

def make_prediction(input_vector, weights, bias):
    layer_1 = np.dot(input_vector, weights) + bias
    layer_2 = np.dot(input_vector, weights) + bias
    layer_3 = sigmoid(layer_2)
    return layer_3

prediction = make_prediction(input_vector, weights_1, bias)
print(f"The prediction result is: {prediction}")